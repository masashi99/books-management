[config]
default_to_workspace = false

[env]
AUTH_TOKEN_TTL = 86400
DATABASE_NAME = "app"
DATABASE_PASSWORD = "passwd"
DATABASE_PORT_INNER = 5432
DATABASE_PORT_OUTER = 5432
DATABASE_USERNAME = "app"
HOST = "0.0.0.0"
PORT = 18080
REDIS_PORT_INNER = 6379
REDIS_PORT_OUTER = 6379

[tasks.set-env-docker.env]
DATABASE_HOST = "postgres"
DATABASE_PORT = "${DATABASE_PORT_INNER}"
DATABASE_URL = "postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}"
JAEGER_HOST = "jaeger"
JAEGER_PORT = 6831
REDIS_HOST = "redis"
REDIS_PORT = "${REDIS_PORT_INNER}"

[tasks.set-env-local.env]
DATABASE_HOST = "localhost"
DATABASE_PORT = "${DATABASE_PORT_OUTER}"
DATABASE_URL = "postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}"
JAEGER_HOST = "localhost"
JAEGER_PORT = 6831
REDIS_HOST = "localhost"
REDIS_PORT = "${REDIS_PORT_OUTER}"

[tasks.before-build]
run_task = [
  {name = [
    "compose-up-db",
    "migrate",
    "compose-up-redis",
  ]},
]

[tasks.compose-build-app]
args = [
  "compose",
  "build",
  "app",
  "--build-arg",
  "BUILDKIT_INLINE_CACHE=1",
  "${@}",
]
command = "docker"
extend = "set-env-local"

[tasks.run]
args = ["run", "${@}"]
command = "cargo"
dependencies = ["before-build"]
extend = "set-env-local"

[tasks.run-in-docker]
args = ["compose", "up", "-d", "app"]
command = "docker"
dependencies = ["before-build", "compose-build-app"]
extend = "set-env-docker"

[tasks.logs]
args = ["compose", "logs", "${@}"]
command = "docker"
dependencies = ["before-build"]
extend = "set-env-docker"

[tasks.build]
args = ["build", "${@}"]
command = "cargo"
dependencies = ["before-build"]
extend = "set-env-local"

[tasks.check]
args = ["check"]
command = "cargo"
dependencies = ["before-build"]
extend = "set-env-local"

[tasks.watch]
dependencies = ["before-build"]
extend = "set-env-local"
run_task = [{name = ["fmt", "clippy", "test"]}]
watch = true

[tasks.fmt]
args = ["fmt", "--all", "${@}"]
command = "cargo"
extend = "set-env-local"

[tasks.clippy]
args = ["clippy", "--all", "--all-targets", "${@}"]
command = "cargo"
extend = "set-env-local"

[tasks.test]
args = [
  "nextest",
  "run",
  "--workspace",
  "--status-level",
  "all",
  "--test-threads=1",
]
command = "cargo"
extend = "set-env-local"
install_crate = {crate_name = "cargo-nextest", binary = "cargo", test_arg = ["nextest", "--help"]}

[tasks.clippy-ci]
dependencies = ["before-build"]
run_task = "clippy"

[tasks.test-ci]
dependencies = ["before-build"]
run_task = "test"

[tasks.migrate]
extend = "set-env-local"
install_crate = {crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3"}
script = '''
#!/bin/bash
until sqlx migrate run --source adapter/migrations; do
  sleep 1
done
'''

[tasks.sqlx]
args = ["${@}", "--source", "adapter/migrations"]
command = "sqlx"
extend = "set-env-local"
install_crate = {crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3"}

[tasks.psql]
args = [
  "run",
  "-it",
  "--rm",
  "--network",
  "host",
  "-v",
  "${PWD}:/work",
  "postgres:17.2",
  "psql",
  "${DATABASE_URL}",
  "${@}",
]
command = "docker"
extend = "set-env-local"

[tasks.initial-setup]
args = [
  "run",
  "-it",
  "--rm",
  "--network",
  "host",
  "-v",
  "${PWD}:/work",
  "postgres:17.2",
  "psql",
  "${DATABASE_URL}",
  "-f",
  "/work/data/initial_setup.sql",
]
command = "docker"
extend = "set-env-local"

[tasks.compose]
args = ["compose", "${@}"]
command = "docker"
extend = "set-env-docker"

[tasks.compose-up-db]
args = ["compose", "up", "-d", "postgres"]
command = "docker"
extend = "set-env-docker"

[tasks.compose-up-redis]
args = ["compose", "up", "-d", "redis"]
command = "docker"
extend = "set-env-docker"

[tasks.compose-down]
args = ["compose", "down"]
command = "docker"
extend = "set-env-local"

[tasks.compose-remove]
args = ["compose", "down", "-v"]
command = "docker"
extend = "set-env-docker"
